# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release module 1

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:

  mainworkflow:

    runs-on: ubuntu-latest

    steps:
      # Checkout and setup
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
        # Grant permission to mvnw
      - name: Grant permission for mvnw
        run:
          chmod + mvnw
        # Check code formatting
      - name: Check java code formatting
        run: |
          ./mvnw com.coveo:fmt-maven-plugin:check
        # Check if change is there in module1
      - name: Check if change is in module1
        if: github.ref == 'refs/heads/main'
        uses: dorny/paths-filter@v2
        id: module1
        with:
          filters: |
            src:
              - 'module1/**'
        # Check if change is there in module2
      - name: Check if change is in module2
        if: github.ref == 'refs/heads/main'
        uses: dorny/paths-filter@v2
        id: module2
        with:
          filters: |
            src:
              - 'module2/**'
        # run only if some file in 'src' folder was changed of module 1
      - name: If change is in module1 create release tag
        if: steps.module1.outputs.src == 'true' &&  github.ref == 'refs/heads/main'
        run: |
          git config user.email 'pareeksumit101@gmail.com'
          git config user.name 'sumitpareek1'
          RELEASE_VERSION=$(git tag --list --sort=-committerdate "module1-*" | head -n 1)
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo running on branch ${RELEASE_VERSION}
          ./mvnw -B package --file module1/pom.xml
          ./mvnw -B --file module1/pom.xml release:prepare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # run only if some file in 'src' folder was changed of module 2
      - name: If change is in module2 create release tag
        if: steps.module2.outputs.src == 'true' && github.ref == 'refs/heads/main'
        run: |
          git config user.email "pareeksumit101@gmail.com"
          git config user.name "sumitpareek1"
          git pull
          ./mvnw -B package --file module2/pom.xml -Dtag=hey
          ./mvnw -B --file module2/pom.xml release:prepare
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: new step
        run: |
          echo running on branch ${GITHUB_REF##*/}
